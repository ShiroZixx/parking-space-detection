from ultralytics import SAM

# Load a model
model = SAM("sam2.1_b.pt")

# Run inference with bboxes prompt
points_shot_1 = [[61, 15], [45, 59], [49, 94], [49, 142], [61, 180], [59, 215], [53, 295], [55, 337], [59, 374], [57, 414], [55, 561], [59, 596], [57, 640], [64, 672], [57, 726], [723, 77], [762, 79], [794, 75], [827, 73], [880, 73], [635, 257], [681, 333], [725, 245], [718, 333], [769, 239], [760, 324], [796, 245], [792, 335], [840, 238], [831, 320], [884, 331], [869, 236], [913, 245], [919, 328], [955, 333], [948, 243], [986, 243], [997, 324], [689, 515], [739, 506], [773, 506], [804, 511], [907, 504], [953, 498], [984, 511], [1034, 517], [1428, 82], [1593, 94], [1681, 98], [1350, 215], [1394, 230], [1478, 245], [1522, 261], [1557, 261], [1591, 257], [1628, 261], [1666, 262], [1702, 268], [1748, 272], [1783, 264], [1361, 329], [1327, 333], [1405, 331], [1449, 343], [1482, 331], [1518, 335], [1559, 339], [1593, 339], [1637, 337], [1668, 331], [1704, 337], [1746, 347], [1787, 345], [1846, 333], [1325, 506], [1327, 588], [1365, 502], [1358, 588], [1400, 510], [1398, 579], [1446, 504], [1426, 579], [1478, 515], [1469, 590], [1518, 504], [1503, 596], [1543, 590], [1553, 510], [1585, 500], [1584, 580], [1637, 592], [1628, 515], [1658, 515], [1672, 586], [1712, 596], [1698, 515], [1787, 502], [1783, 588], [1817, 586], [1854, 588], [1905, 594], [1898, 506], [1402, 749], [1438, 749], [1476, 747], [1520, 762], [1557, 753], [1591, 762], [1630, 766], [1670, 766], [1714, 770], [1744, 761], [1783, 770], [1821, 776], [1865, 766], [1896, 768], [1359, 866], [1405, 868], [1440, 875], [1480, 868], [1515, 868], [1557, 874], [1585, 868], [1633, 868], [1668, 874], [1704, 868], [1743, 868], [1785, 879], [1817, 877], [1859, 875], [1896, 875], [1323, 1038], [1363, 1038], [1402, 1040], [1476, 1046], [1511, 1046], [1557, 1042], [1585, 1042], [1628, 1044], [1704, 1040], [1741, 1044], [1781, 1044], [1813, 1048], [1858, 1050], [1890, 1048]]
points_shot_2 = [[49, 140], [51, 186], [59, 262], [61, 337], [51, 563], [51, 648], [720, 77], [836, 63], [873, 67], [637, 247], [721, 339], [762, 326], [764, 247], [800, 333], [842, 335], [879, 247], [995, 239], [695, 517], [915, 502], [946, 502], [1323, 333], [1446, 339], [1478, 255], [1582, 98], [1670, 100], [1746, 245], [1867, 519], [1871, 579], [1622, 500], [1471, 590], [1396, 513], [1442, 745], [1744, 761], [1787, 782], [1635, 764], [1633, 866], [1587, 860], [1744, 874], [1398, 875], [1361, 1050]]
points_shot_3 = [[55, 17], [55, 61], [51, 180], [59, 222], [51, 303], [55, 339], [51, 416], [26, 489], [61, 559], [57, 642], [43, 602], [62, 680], [62, 726], [836, 61], [879, 67], [879, 249], [764, 253], [758, 331], [723, 331], [643, 251], [911, 511], [949, 494], [1400, 508], [1587, 92], [1677, 94], [1746, 255], [1628, 331], [1444, 335], [1517, 510], [1785, 502], [1620, 511], [1858, 573], [1476, 584], [1735, 757], [1777, 776], [1622, 854], [1737, 866], [1582, 866], [1402, 875], [1356, 872], [1442, 875], [1359, 1040], [1513, 1046], [1628, 1040], [1781, 1048], [1511, 339], [1785, 339], [835, 333], [792, 329], [994, 243], [769, 523], [1319, 590], [1430, 741], [1900, 508], [1875, 684]]
points_shot_4 = [[62, 19], [55, 54], [55, 96], [49, 144], [43, 180], [61, 216], [55, 297], [57, 331], [51, 372], [64, 414], [53, 452], [62, 561], [57, 602], [61, 636], [64, 670], [61, 711], [723, 65], [762, 65], [800, 69], [836, 52], [875, 67], [647, 243], [691, 201], [718, 245], [764, 249], [802, 249], [844, 255], [879, 253], [909, 253], [951, 238], [988, 253], [683, 328], [727, 324], [766, 328], [810, 324], [836, 322], [880, 341], [913, 335], [955, 329], [997, 318], [693, 515], [741, 510], [777, 510], [810, 513], [915, 510], [955, 492], [992, 513], [1038, 517], [1072, 511], [1585, 100], [1676, 98], [1350, 222], [1396, 239], [1484, 257], [1517, 261], [1603, 262], [1639, 261], [1672, 261], [1714, 261], [1744, 266], [1783, 257], [1365, 328], [1403, 326], [1449, 337], [1478, 335], [1515, 337], [1555, 339], [1591, 331], [1631, 333], [1668, 335], [1708, 345], [1750, 341], [1783, 345], [1856, 347], [1329, 510], [1329, 588], [1369, 508], [1361, 584], [1409, 504], [1402, 592], [1444, 500], [1438, 586], [1474, 504], [1474, 580], [1513, 508], [1507, 584], [1543, 510], [1557, 592], [1589, 511], [1587, 579], [1618, 511], [1631, 586], [1662, 515], [1676, 586], [1710, 508], [1698, 586], [1790, 502], [1785, 575], [1825, 508], [1815, 579], [1865, 513], [1858, 586], [1903, 511], [1905, 590], [1407, 768], [1440, 753], [1482, 753], [1513, 757], [1545, 757], [1587, 751], [1630, 762], [1662, 766], [1704, 761], [1744, 774], [1775, 778], [1827, 770], [1856, 768], [1888, 766], [1354, 866], [1394, 875], [1434, 874], [1472, 877], [1509, 875], [1555, 874], [1587, 868], [1626, 868], [1664, 875], [1710, 870], [1737, 868], [1783, 877], [1815, 870], [1861, 872], [1902, 891], [1315, 1048], [1354, 1050], [1402, 1048], [1446, 1048], [1474, 1052], [1513, 1054], [1559, 1050], [1584, 1048], [1630, 1048], [1660, 1046], [1706, 1044], [1737, 1046], [1785, 1046], [1815, 1042], [1850, 1046], [1892, 1048]]
points_shot_5 = [[55, 15], [45, 144], [57, 182], [57, 335], [62, 423], [62, 561], [53, 640], [840, 61], [882, 69], [639, 251], [762, 255], [877, 251], [994, 247], [844, 314], [792, 331], [760, 329], [721, 328], [695, 515], [769, 511], [917, 500], [957, 496], [1591, 103], [1677, 96], [1486, 245], [1432, 329], [1321, 335], [1744, 261], [1630, 328], [1518, 331], [1396, 513], [1517, 508], [1618, 504], [1785, 498], [1865, 577], [1896, 510], [1467, 584], [1518, 586], [1428, 751], [1624, 757], [1754, 749], [1785, 764], [1850, 755], [1896, 761], [1739, 860], [1631, 864], [1587, 858], [1557, 866], [1388, 870], [1361, 860], [1430, 875], [1520, 1046], [1367, 1042], [1662, 990], [1773, 1034]]

points_shots = [points_shot_1,points_shot_2,points_shot_3,points_shot_4,points_shot_5]

input_images = [
    "data/cars/images/train/sshot1.png",
    "data/cars/images/train/sshot2.png",
    "data/cars/images/train/sshot3.png",
    "data/cars/images/val/sshot4.png",
    "data/cars/images/val/sshot5.png"
]

for points, input_image in zip(points_shots, input_images):
    results = model(input_image, points=points)

    for i, res in enumerate(results):
        normalized_bboxes = res.boxes.xywhn

        output_file = input_image.replace(".png", ".txt")
        with open(output_file, "w", encoding="utf-8") as f:
            for nbbox in normalized_bboxes:
                x, y, w, h = nbbox
                f.write(f"0 {x} {y} {w} {h}\n")